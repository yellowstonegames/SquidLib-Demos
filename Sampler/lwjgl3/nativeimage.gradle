
project(":lwjgl3") {
  java.sourceCompatibility = JavaVersion.VERSION_11
  java.targetCompatibility = JavaVersion.VERSION_11
  apply plugin: "org.graalvm.buildtools.native"

  dependencies {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
    implementation "io.github.berstanio:gdx-svmhelper-backend-lwjgl3:$graalHelperVersion"
    implementation "io.github.berstanio:gdx-svmhelper-extension-freetype:$graalHelperVersion"
  }
  graalvmNative {
    binaries {
      main {
        imageName = appName
        mainClass = project.mainClassName
        buildArgs("-march=compatibility")
        jvmArgs.addAll("-Dfile.encoding=UTF8")
        sharedLibrary.set(false)
      }
    }
  }
  run {
    doNotTrackState("Running the app should not be affected by Graal.")
  }

  nativeCompile.dependsOn proguard

  // Modified from https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/ ; thanks, Lyze!
  generateResourcesConfigFile.doFirst {
    def assetsFolder = new File("${project.rootDir}/assets/")
    def lwjgl3 = project(':lwjgl3')
    def resFolder = new File("${lwjgl3.projectDir}/src/main/resources/META-INF/native-image/${lwjgl3.ext.appName}")
    resFolder.mkdirs()
    def resFile = new File(resFolder, "resource-config.json")
    resFile.delete()
    resFile.append(
            """{
  "resources":{
  "includes":[
    {
      "pattern": ".*(""")
    fileTree(assetsFolder).collect { it.name }.each {
      // the backslash-Q and backslash-E escape the start and end of a literal string, respectively.
      resFile.append("\\\\Q${it}\\\\E|")
    }
    // we also match all of the window icon images this way and the font files that are part of libGDX.
    resFile.append(
            """libgdx.+\\\\.png|lsans.+)"
    }
  ]},
  "bundles":[]
}"""
    )
  }
}
